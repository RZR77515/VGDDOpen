<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGBgAAAEAGABIBwAAFgAAACgAAAAYAAAAMAAAAAEAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADR1tdpa21kZWhjZWhjZWhkZWhjZWhzdnjd4ePj6Orj6Orj6Orj6Orj6Orj6Orf5OZ3eXpjZWhjZWhj
        ZWhjZmhiZWdqbW7EyMp5fHwYFywMDT8PEEoNDUEREEoMDT8XFy9KS03Z3t/j6Orj6Orj6Orj6Ord4uRa
        XFsaGigODj4PEEgNDUIQEEoNDEEVFTRnaWt0dngREUwtLd4MDK0xMd8LC6svL+ERElEfHyVOT1LZ3t/j
        6Orj6Ord4uRaXF0fHyMWFzwmJdASErMtLdoNDa0uL98ODnFlZ212d3gXF0YREY4IB4YREZEHB4YSEZAN
        DGkPD08cHTRQUVLZ3t/d4uRbXl0fHywQEUsNDl8PD4sJCYgQEJAICIYQEZEREVdmaG12eHkUFFEyMu0N
        DbU3N+8MDLI3N+4NDbAvL+wVFlEjIyxUVFZdX2AkIyocHTwiItAYGcQtLd8UFLsyMucOD7Q0NO4REXhn
        aW53eXoaGkoODpAICIgODpMIB4kODpMICIkNDpENDXAPD2AhITYlJTASElkODmwMDIoKCowNDZAJCYoN
        DZIICIkNDZMTE1toam54eXsZGVEyMvUNDrQ5OfgMDLQ5OfcODbM2NvISEr8sLOccHUojIz4eH8YiItQn
        J9saGsYvL+YVFb40M+8PD7QzM/UUE3Zpa2+JiowpKTUiIkwVFWYPDp0ICY4PD54JCY4PDpwKCZEODpcO
        Dn4PD38NDY4MDJUMDJcKCpIODpoKCZEPDpwPD3QgIE8mJjl+gYPf5OZrbW0xMTMcHGE0M+sODq07O+8O
        DrA4OOsTE7sxMuIaGsIsLNghIcokJM0pKdUbG8MwMeAWFrgwMOQYGYYtLTNpamrf5OadoKWRlJc2Nzse
        HisXFzUPDkoKCoQKCpcQEKkJCZMGBmEGB2IGBmMGBmIFBmAGBmILC5kJCYcKClIVFTcbGy00NTmRlJms
        sLIoKW0ICDwRD3wHBzoLC1cMC2QdHn8SEqlCQeEICHsNDGIREHYPD24QD3AIBzkPDlwZGawUFH8QDnII
        B0ERD3oQD3kPDnAgIGkoKW8GBjsPDoEGBjoJClcMC2kKCVALC1kFBlAGBTcMDG4ODnYXF5wTEpoREWEL
        Cm0KCVcJCUwODXkIB0ULC2YJCEsKCVkaGmQyNI4QEFkgILIPEFMXF3wZGZUTE2oREl0ZGZASElwbG6Ak
        I5U+PccvL78rKoMaG5wTE14REV4eHqcREWIYGYkSElwVFHQoKIU8PpwoKMUvLdAoKMUbG3YmJq4mJbos
        K70nJsMXFlkoJ7wbGpspKcohIcQjJIIoJ8QtLL0lJLgoJ60ZGXMrKsgqKb0oJ8AzM5Ofoq2GiZhHR1g8
        PVooKFUiIWsnKJAZGXwmJowUFHsjIoYnJqQ7O78uLrcvMKYgIIMdHYIkJIseHm0lJVs2NlpFRFaGipis
        sLXX3N1qa2teXmExMoBFReUWFbpNTecWFrtJSeUcHMJBQd8kJMY5OdUsLcwxMM02NtQlJsY/QN0fIMBC
        QuEnJ55ZWWBqa2vY3d6RkpRXWGg3N3MrKoQ+PsEYGKBAQMIaGqE9PcAeHqY4OLgzMphERKItLaksLLEw
        MLQkJas3N7sgIKY6O74nJ5E0M3ZOTmiFhomPkJE8PHtdXO8aGsJqavAZGMJra/AbG8BkZO0jI8hNTuZG
        RnJUVWs3OMtAQNVJSdwxMsxYWOUpKMZgYeweHsFfYPAtLZWEh4uPkZNISHg2NrgZGZ82NrwZGZ43N7wb
        G541NbgyMo9PUJJeXm9lZW5MTIdCQpUuLqsjI6gwMLUfH6Q0M7gbG6A1Nbs5OIOHiY2RkpRAQIN/f/Yg
        IMeKivceHsaMjPchIMN1dfRDQ4BubnOJjI2SlJZvb3JXWHRUVN4+PtFycuozM8p9ffIlJcWDg/YxMZ2J
        io+Sk5ZQT38xMrcaGqAwMboaGp8yMrs0NIxaWZFlZXiJiYnb4OLg5OaSlJVtbXhXV4lBQo4uLrEfHqUv
        L7cbG6EvMLk9PIeMjpKTlJdGRoaQkPomJsSdnfwkJMSWlftDQ4Z3d3uPkJHe4+Xj6Orj6Ori5uiSlJZ5
        eXtWVn12d+w8O8qOjvQsK8SUlPo4OJ6MjpOdn6Bvb4FcXIlWV4VbW4tWVoVcXIptboCOj4/g5efj6Orj
        6Orj6Orj6Ori5uiVl5h0dYBdXYdYV4ZaWopWV4ZbWopoaIGTlZjX3N6mqaukpqikpqikpqikpqikpqir
        rq/g5efj6Orj6Orj6Orj6Orj6Orj6Ori5+mrrrCjpqikpqikpqikpqikpqinqavT19kAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>